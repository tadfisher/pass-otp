.\" Automatically generated by Pandoc 2.1.1
.\"
.TH "PASS\-OTP" "1" "February 17,2018" "pass\-otp 1.0.0" "Password Store Extension"
.hy
.SH NAME
.PP
pass\-otp \- A \f[B]pass\f[](1) extension for managing
one\-time\-password (OTP) tokens.
.SH SYNOPSIS
.PP
pass otp [\f[I]COMMAND\f[]] [\f[I]OPTIONS\f[]]\&... [\f[I]ARGS\f[]]\&...
.SH DESCRIPTION
.PP
pass\-otp extends the \f[B]pass\f[](1) utility with the otp command for
adding OTP secrets, generating OTP codes, and displaying secret key URIs
using the standard \f[I]otpauth://\f[] scheme.
.PP
If no COMMAND is specified, COMMAND defaults to \f[B]code\f[].
.SH COMMANDS
.TP
.B otp code [\-c, \-\-clip] \f[I]pass\-name\f[]
Generate and print an OTP code from the secret key stored in
\f[I]pass\-name\f[] using \f[B]oathtool\f[](1).
If \f[B]\-c\f[] (\f[B]\-\-clip\f[]) is specified, do not print the code
but instead copy it to the clipboard using \f[B]xclip\f[](1) and then
restore the clipboard after 45 (or \f[B]PASSWORD_STORE_CLIP_TIME\f[])
seconds.
This command is alternatively named \f[B]show\f[].
.RS
.RE
.TP
.B otp insert [\-f, \-\-force] [\-e, \-\-echo] [ [\-s, \-\-secret] [\-i, \-\-issuer \f[I]issuer\f[] ] [\-a, \-\-account \f[I]account\f[]] ] [\f[I]pass\-name\f[]]
Prompt for and insert a new OTP secret into the password store at
\f[I]pass\-name\f[].
.RS
.PP
If \f[B]\-\-secret\f[] is specified, prompt for the \f[I]secret\f[]
value, assuming SHA1 algorithm, 30\-second period, and 6 OTP digits.
One or both of \f[I]issuer\f[] and \f[I]account\f[] must also be
specified.
.PP
If \f[B]\-\-secret\f[] is not specified, prompt for a key URI; for the
key URI specification see the documentation at
.PP
<https://github.com/google/google-authenticator/wiki/Key-Uri-Format>
.PP
The secret/URI is consumed from stdin; specify \f[B]\-e\f[]
(\f[B]\-\-echo\f[]) to echo input when running this command
interactively.
.PP
If \f[I]pass\-name\f[] is not specified, convert the
\f[I]issuer:accountname\f[] URI label to a path in the form of
\f[I]issuer/accountname\f[].
.PP
Prompt before overwriting an existing secret, unless \f[B]\-f\f[]
(\f[B]\-\-force\f[]) is specified.
This command is alternatively named \f[B]add\f[].
.RE
.TP
.B otp append [\-f, \-\-force] [\-e, \-\-echo] [ [\-s, \-\-secret] [\-i, \-\-issuer \f[I]issuer\f[] ] [\-a, \-\-account \f[I]account\f[]] ] [\f[I]pass\-name\f[]]
Append an OTP secret to the password stored in \f[I]pass\-name\f[],
preserving any existing lines.
.RS
.PP
If \f[B]\-\-secret\f[] is specified, prompt for the \f[I]secret\f[]
value, assuming SHA1 algorithm, 30\-second period, and 6 OTP digits.
One or both of \f[I]issuer\f[] and \f[I]account\f[] must also be
specified.
.PP
If \f[B]\-\-secret\f[] is not specified, prompt for a key URI; for the
key URI specification see the documentation at
.PP
<https://github.com/google/google-authenticator/wiki/Key-Uri-Format>
.PP
The secret/URI is consumed from stdin; specify \f[B]\-e\f[]
(\f[B]\-\-echo\f[]) to echo input when running this command
interactively.
.PP
Prompt before overwriting an existing secret, unless \f[B]\-f\f[]
(\f[B]\-\-force\f[]) is specified.
.RE
.TP
.B otp uri [\-c, \-\-clip | \-q, \-\-qrcode] \f[I]pass\-name\f[]
Print the key URI stored in \f[I]pass\-name\f[] to stdout.
If \f[B]\-c\f[] (\f[B]\-\-clip\f[]) is specified, do not print the URI
but instead copy it to the clipboard using \f[B]xclip\f[](1) and then
restore the clipboard after 45 (or \f[B]PASSWORD_STORE_CLIP_TIME\f[])
seconds.
If \f[B]\-q\f[] (\f[B]\-\-qrcode\f[]) is specified, do not print the URI
but instead display a QR code using \f[B]qrencode\f[](1) either to the
terminal or graphically if supported.
.RS
.RE
.TP
.B otp validate \f[I]uri\f[]
Test a URI string for validity according to the Key Uri Format.
For more information about this format, see the documentation at
.RS
.PP
<https://github.com/google/google-authenticator/wiki/Key-Uri-Format>
.RE
.SH OPTIONS
.TP
.B help, \-h, \-\-help
Show usage message.
.RS
.RE
.SH SEE ALSO
.PP
\f[C]pass\f[] (1), \f[C]qrencode\f[] (1), \f[C]zbarimg\f[] (1)
.PP
<https://github.com/tadfisher/pass-otp>
.SH COPYING
.PP
This program is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.
.PP
This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.
.PP
You should have received a copy of the GNU General Public License along
with this program.
If not, see <http://www.gnu.org/licenses/>.
.SH AUTHORS
Tad Fisher <tadfisher@gmail.com>.
